@import 'variables';
@import 'functions';

/*****************
** MEDIA QUERIES *
*****************/

/**
** Small screen non-retina
*/
@mixin phone {
  @media only screen and (min-width: $grid-breakpoint-phone) {
    @content;
  }
}

/**
** Small screen retina
*/
@mixin phone-retina {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: $grid-breakpoint-phone),
    only screen and (   min--moz-device-pixel-ratio: 2) and (min-width: $grid-breakpoint-phone),
    only screen and (   -o-min-device-pixel-ratio: 2/1) and (min-width: $grid-breakpoint-phone),
    only screen and (        min-device-pixel-ratio: 2) and (min-width: $grid-breakpoint-phone),
    only screen and (        min-resolution: 192dpi)    and (min-width: $grid-breakpoint-phone),
    only screen and (        min-resolution: 2dppx)     and (min-width: $grid-breakpoint-phone) {
    @content;
  }
}

/**
** Medium screen non-retina
*/
@mixin tablet {
  @media only screen and (min-width: $grid-breakpoint-tablet) {
    @content;
  }
}

/**
** Medium screen retina
*/
@mixin tablet-retina {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2)      and (min-width: $grid-breakpoint-tablet),
    only screen and (   min--moz-device-pixel-ratio: 2)      and (min-width: $grid-breakpoint-tablet),
    only screen and (     -o-min-device-pixel-ratio: 2/1)    and (min-width: $grid-breakpoint-tablet),
    only screen and (        min-device-pixel-ratio: 2)      and (min-width: $grid-breakpoint-tablet),
    only screen and (                min-resolution: 192dpi) and (min-width: $grid-breakpoint-tablet),
    only screen and (                min-resolution: 2dppx)  and (min-width: $grid-breakpoint-tablet) {
    @content;
  }
}

/**
** Desktop screen non-retina
*/
@mixin desktop {
  @media only screen and (min-width: $grid-breakpoint-desktop) {
    @content;
  }
}

/**
** Desktop screen retina
*/
@mixin desktop-retina {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2)      and (min-width: $grid-breakpoint-desktop),
    only screen and (   min--moz-device-pixel-ratio: 2)      and (min-width: $grid-breakpoint-desktop),
    only screen and (     -o-min-device-pixel-ratio: 2/1)    and (min-width: $grid-breakpoint-desktop),
    only screen and (        min-device-pixel-ratio: 2)      and (min-width: $grid-breakpoint-desktop),
    only screen and (                min-resolution: 192dpi) and (min-width: $grid-breakpoint-desktop),
    only screen and (                min-resolution: 2dppx)  and (min-width: $grid-breakpoint-desktop) {
    @content;
  }
}

/**
** Large desktop media query
*/
@mixin desktop-large {
  @media only screen and (min-width: $grid-breakpoint-desktop-large) {
    @content;
  }
}



@mixin grid-width($i: 4, $columns: 12, $spacing: 0px) {
  @if $i > $columns {
    @error "bad column value at mixin grid-width";
  }
  width: calc-width($i, $columns, $spacing);
}

@mixin grid-margin($i: 3, $columns: 12, $spacing: 0px) {
  $error: false;
  @if $i > $columns {
    @error "Columns value must be lesser than total amount of columns.";
    $error: true;
  }
  @if not $error {
    margin-left: calc-width($i, $columns, $spacing);
  }
}

@mixin font($size: 16px, $weight: 400, $italic: false) {
  font: {
    size: $size;
    weight: $weight;
    @if $italic == true {
      style: italic;
    } @else {
      style: normal;
    }
  }
}

@mixin visually-hide {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px; padding: 0; border: 0;
}


/**
** Shadows
*/
@mixin focus-shadow() {
  box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);
}

@mixin shadow-2dp() {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 1px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
  0 1px 5px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}
@mixin shadow-3dp() {
  box-shadow: 0 3px 4px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 3px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
  0 1px 8px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}
@mixin shadow-4dp() {
  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 1px 10px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 2px 4px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
@mixin shadow-6dp() {
  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 1px 18px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 3px 5px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
@mixin shadow-8dp() {
  box-shadow: 0 8px 10px 1px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 14px 2px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 5px 5px -3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-16dp() {
  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0  6px 30px 5px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0  8px 10px -5px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-24dp() {
  box-shadow: 0  9px 46px  8px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 11px 15px -7px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 24px 38px  3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
